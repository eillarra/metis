# Generated by Django 4.2.1 on 2023-05-22 15:29

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import metis.models.rel.files
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={"unique": "A user with that username already exists."},
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                        verbose_name="username",
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=150, verbose_name="first name")),
                ("last_name", models.CharField(blank=True, max_length=150, verbose_name="last name")),
                ("email", models.EmailField(blank=True, max_length=254, verbose_name="email address")),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now, verbose_name="date joined")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Discipline",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("code", models.CharField(max_length=16)),
                ("name", models.CharField(max_length=160)),
                ("name_en", models.CharField(max_length=160, null=True)),
                ("name_nl", models.CharField(max_length=160, null=True)),
                ("color", models.CharField(max_length=16, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["code"],
            },
        ),
        migrations.CreateModel(
            name="DisciplinePreference",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("position", models.PositiveIntegerField()),
                (
                    "discipline",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="preferences", to="metis.discipline"
                    ),
                ),
            ],
            options={
                "db_table": "metis_preference_disciplines",
                "ordering": ["preference", "position"],
            },
        ),
        migrations.CreateModel(
            name="Education",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("code", models.CharField(max_length=16, unique=True)),
                ("name", models.CharField(max_length=160)),
                ("name_en", models.CharField(max_length=160, null=True)),
                ("name_nl", models.CharField(max_length=160, null=True)),
                ("short_name", models.CharField(max_length=80)),
                ("short_name_en", models.CharField(max_length=80, null=True)),
                ("short_name_nl", models.CharField(max_length=80, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("description_en", models.TextField(blank=True, null=True)),
                ("description_nl", models.TextField(blank=True, null=True)),
                ("config", models.JSONField(default=dict)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Internship",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("custom_start_date", models.DateField(null=True)),
                ("custom_end_date", models.DateField(null=True)),
                ("is_valid", models.BooleanField(default=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "discipline",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="internships",
                        to="metis.discipline",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Place",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "type",
                    models.CharField(
                        choices=[("hospital", "Hospital"), ("ward", "Ward"), ("private_center", "Private center")],
                        default="hospital",
                        max_length=16,
                    ),
                ),
                ("name", models.CharField(max_length=160)),
                ("code", models.CharField(max_length=160)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "education",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="places", to="metis.education"
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="children",
                        to="metis.place",
                    ),
                ),
            ],
            options={
                "db_table": "metis_education_places",
                "ordering": ["education", "code"],
            },
        ),
        migrations.CreateModel(
            name="PlacePreference",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("position", models.PositiveIntegerField()),
                (
                    "place",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="preferences", to="metis.place"
                    ),
                ),
            ],
            options={
                "db_table": "metis_preference_places",
                "ordering": ["preference", "position"],
            },
        ),
        migrations.CreateModel(
            name="Preference",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("disciplines", models.ManyToManyField(through="metis.DisciplinePreference", to="metis.discipline")),
                (
                    "internship",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="preferences", to="metis.internship"
                    ),
                ),
                ("places", models.ManyToManyField(through="metis.PlacePreference", to="metis.place")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Program",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=160)),
                ("name_en", models.CharField(max_length=160, null=True)),
                ("name_nl", models.CharField(max_length=160, null=True)),
                ("valid_from", models.DateField()),
                ("valid_until", models.DateField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "education",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="programs", to="metis.education"
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProgramBlock",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=160)),
                ("position", models.PositiveSmallIntegerField()),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "program",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="blocks", to="metis.program"
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "metis_program_blocks",
                "ordering": ["program", "position"],
                "unique_together": {("program", "position")},
            },
        ),
        migrations.CreateModel(
            name="ProgramInternship",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=160)),
                ("position", models.PositiveSmallIntegerField(default=0)),
                ("start_week", models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ("duration", models.DurationField(blank=True, null=True)),
                (
                    "block",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="internships", to="metis.programblock"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "metis_program_internships",
                "ordering": ["block__position", "position"],
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=32)),
                ("is_active", models.BooleanField(default=True)),
                ("is_visible_to_planner", models.BooleanField(default=True)),
                ("is_visible_to_contacts", models.BooleanField(default=True)),
                ("is_visible_to_students", models.BooleanField(default=False)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "education",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="projects", to="metis.education"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("wikidata_id", models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ("name", models.CharField(max_length=160)),
                ("name_en", models.CharField(max_length=160, null=True)),
                ("name_nl", models.CharField(max_length=160, null=True)),
                ("country", django_countries.fields.CountryField(max_length=2)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["country", "name"],
            },
        ),
        migrations.CreateModel(
            name="Track",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=160)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "program",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="tracks", to="metis.program"
                    ),
                ),
            ],
            options={
                "db_table": "metis_program_tracks",
            },
        ),
        migrations.CreateModel(
            name="TrackInternship",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("position", models.PositiveIntegerField()),
                (
                    "program_internship",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="tracks", to="metis.programinternship"
                    ),
                ),
                ("track", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="metis.track")),
            ],
            options={
                "db_table": "metis_program_track_internships",
                "ordering": ["track", "position"],
            },
        ),
        migrations.AddField(
            model_name="track",
            name="program_internships",
            field=models.ManyToManyField(through="metis.TrackInternship", to="metis.programinternship"),
        ),
        migrations.AddField(
            model_name="track",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="TmpStudent",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("phone", models.CharField(blank=True, max_length=255, null=True)),
                ("period", models.CharField(max_length=255)),
                ("block", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="metis.programblock")),
                ("project", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="metis.project")),
            ],
        ),
        migrations.CreateModel(
            name="TmpPlaceData",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("remarks", models.TextField(blank=True, null=True)),
                ("discipline", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="metis.discipline")),
                ("place", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="metis.place")),
            ],
        ),
        migrations.CreateModel(
            name="TmpMentor",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("phone", models.CharField(blank=True, max_length=255, null=True)),
                ("address", models.CharField(blank=True, max_length=255, null=True)),
                ("phone_numbers", models.JSONField(blank=True, null=True)),
                ("emails", models.JSONField(blank=True, null=True)),
                ("place", models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to="metis.place")),
                ("project", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="metis.project")),
            ],
        ),
        migrations.CreateModel(
            name="TmpInternship",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("remarks", models.TextField()),
                ("project_name", models.CharField(max_length=255)),
                ("block_name", models.CharField(max_length=255)),
                ("period", models.CharField(max_length=255)),
                ("mentors", models.ManyToManyField(to="metis.tmpmentor")),
                ("place", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="metis.place")),
                ("project", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="metis.project")),
                (
                    "student",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="metis.tmpstudent"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TextEntry",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("object_id", models.PositiveIntegerField()),
                ("code", models.CharField(max_length=32)),
                ("version", models.PositiveSmallIntegerField(default=1)),
                ("title", models.CharField(max_length=160)),
                ("title_en", models.CharField(max_length=160, null=True)),
                ("title_nl", models.CharField(max_length=160, null=True)),
                ("text", models.TextField()),
                ("text_en", models.TextField(null=True)),
                ("text_nl", models.TextField(null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contents",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "metis_rel_text",
                "unique_together": {("content_type", "object_id", "code", "version")},
            },
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "block",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="students", to="metis.programblock"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="students", to="metis.project"
                    ),
                ),
                (
                    "track",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="students",
                        to="metis.track",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="student_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["project", "block__position"],
                "unique_together": {("user", "project", "block")},
            },
        ),
        migrations.CreateModel(
            name="Snapshot",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("object_id", models.PositiveIntegerField()),
                ("data", models.JSONField(editable=False, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="snapshots",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "metis_rel_snapshot",
            },
        ),
        migrations.CreateModel(
            name="Signature",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("signed_text", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="signatures", to="metis.student"
                    ),
                ),
                (
                    "text_entry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="signatures", to="metis.textentry"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Remark",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("object_id", models.PositiveIntegerField()),
                ("text", models.TextField()),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="remarks",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "metis_rel_remark",
            },
        ),
        migrations.CreateModel(
            name="RegionPreference",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("position", models.PositiveIntegerField()),
                ("preference", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="metis.preference")),
                (
                    "region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="preferences", to="metis.region"
                    ),
                ),
            ],
            options={
                "db_table": "metis_preference_regions",
                "ordering": ["preference", "position"],
            },
        ),
        migrations.CreateModel(
            name="ProjectPlace",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("disciplines", models.ManyToManyField(related_name="places", to="metis.discipline")),
                (
                    "place",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="project_place_set", to="metis.place"
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="place_set", to="metis.project"
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "metis_project_places",
                "unique_together": {("project", "place")},
            },
        ),
        migrations.AddField(
            model_name="project",
            name="places",
            field=models.ManyToManyField(through="metis.ProjectPlace", to="metis.place"),
        ),
        migrations.AddField(
            model_name="project",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="preference",
            name="regions",
            field=models.ManyToManyField(through="metis.RegionPreference", to="metis.region"),
        ),
        migrations.AddField(
            model_name="preference",
            name="student",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="preferences", to="metis.student"
            ),
        ),
        migrations.AddField(
            model_name="preference",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="placepreference",
            name="preference",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="metis.preference"),
        ),
        migrations.AddField(
            model_name="place",
            name="region",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="places",
                to="metis.region",
            ),
        ),
        migrations.AddField(
            model_name="place",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="PhoneNumber",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("object_id", models.PositiveIntegerField()),
                ("type", models.CharField(choices=[("mobile", "Mobile"), ("landline", "Landline")], max_length=16)),
                ("number", models.CharField(max_length=24)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="phone_numbers",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "db_table": "metis_rel_phone_number",
            },
        ),
        migrations.CreateModel(
            name="Period",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=240)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "program_internship",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="periods",
                        to="metis.programinternship",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="periods", to="metis.project"
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "metis_project_periods",
                "ordering": ["project", "start_date"],
                "unique_together": {("project", "program_internship")},
            },
        ),
        migrations.CreateModel(
            name="Link",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("object_id", models.PositiveIntegerField()),
                (
                    "type",
                    models.CharField(
                        choices=[("website", "Website"), ("linkedin", "LinkedIn"), ("other", "Other")],
                        default="website",
                        max_length=16,
                    ),
                ),
                ("url", models.URLField()),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="links", to="contenttypes.contenttype"
                    ),
                ),
            ],
            options={
                "db_table": "metis_rel_link",
            },
        ),
        migrations.AddField(
            model_name="internship",
            name="period",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, related_name="internships", to="metis.period"
            ),
        ),
        migrations.AddField(
            model_name="internship",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, related_name="internships", to="metis.project"
            ),
        ),
        migrations.AddField(
            model_name="internship",
            name="project_place",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, related_name="internships", to="metis.projectplace"
            ),
        ),
        migrations.AddField(
            model_name="internship",
            name="student",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.PROTECT, related_name="internships", to="metis.student"
            ),
        ),
        migrations.AddField(
            model_name="internship",
            name="track",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, related_name="internships", to="metis.track"
            ),
        ),
        migrations.AddField(
            model_name="internship",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Faculty",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=160)),
                ("name_en", models.CharField(max_length=160, null=True)),
                ("name_nl", models.CharField(max_length=160, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "faculties",
            },
        ),
        migrations.AddField(
            model_name="education",
            name="faculty",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, related_name="educations", to="metis.faculty"
            ),
        ),
        migrations.AddField(
            model_name="education",
            name="office_members",
            field=models.ManyToManyField(blank=True, related_name="education_set", to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="education",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="disciplinepreference",
            name="preference",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="metis.preference"),
        ),
        migrations.CreateModel(
            name="DisciplineConstraint",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("object_id", models.IntegerField()),
                ("min_count", models.PositiveIntegerField(blank=True, null=True)),
                ("max_count", models.PositiveIntegerField(blank=True, null=True)),
                ("max_repeat", models.PositiveIntegerField(blank=True, default=1, null=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="rules", to="contenttypes.contenttype"
                    ),
                ),
                ("disciplines", models.ManyToManyField(related_name="constraints", to="metis.discipline")),
            ],
            options={
                "db_table": "metis_discipline_constraint",
            },
        ),
        migrations.AddField(
            model_name="discipline",
            name="education",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, related_name="disciplines", to="metis.education"
            ),
        ),
        migrations.AddField(
            model_name="discipline",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Case",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=160)),
                (
                    "type",
                    models.CharField(
                        choices=[("regular", "Regular"), ("interactive", "Interactive")],
                        default="regular",
                        max_length=16,
                    ),
                ),
                ("submission_date", models.DateField()),
                ("reviewer_is_approved", models.BooleanField(default=False)),
                ("reviewer_name", models.CharField(blank=True, max_length=160, null=True)),
                ("reviewer_email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "internship",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="cases", to="metis.internship"
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="cases",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "metis_internship_case",
            },
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("object_id", models.PositiveIntegerField()),
                ("address", models.CharField(max_length=160)),
                ("city", models.CharField(max_length=40)),
                ("postcode", models.CharField(max_length=16)),
                ("country", django_countries.fields.CountryField(max_length=2)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="addresses",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "db_table": "metis_rel_address",
            },
        ),
        migrations.CreateModel(
            name="Absence",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("start_at", models.DateTimeField()),
                ("end_at", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[("pending", "Pending"), ("accepted", "Accepted"), ("rejected", "Rejected")],
                        default="pending",
                        max_length=8,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "internship",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="absences", to="metis.internship"
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "metis_internship_absence",
            },
        ),
        migrations.CreateModel(
            name="PlaceCapacity",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("capacity", models.PositiveSmallIntegerField(default=0)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="capacities", to="metis.period"
                    ),
                ),
                (
                    "project_place",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="capacities", to="metis.projectplace"
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "metis_project_place_capacities",
                "unique_together": {("project_place", "period")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="place",
            unique_together={("education", "code")},
        ),
        migrations.CreateModel(
            name="Invitation",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("object_id", models.PositiveIntegerField()),
                ("type", models.CharField(max_length=32)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ("name", models.CharField(max_length=160)),
                ("email", models.EmailField(max_length=254)),
                ("data", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invitations",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "db_table": "metis_rel_invitation",
                "unique_together": {("content_type", "object_id", "type", "email")},
            },
        ),
        migrations.CreateModel(
            name="File",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("object_id", models.PositiveIntegerField()),
                ("file", models.FileField(upload_to=metis.models.rel.files.get_upload_path)),
                ("position", models.PositiveSmallIntegerField(default=0)),
                ("code", models.CharField(blank=True, max_length=32, null=True)),
                ("version", models.PositiveSmallIntegerField(default=1)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="files", to="contenttypes.contenttype"
                    ),
                ),
            ],
            options={
                "db_table": "metis_rel_file",
                "ordering": ["content_type", "object_id", "position"],
                "indexes": [models.Index(fields=["file"], name="metis_rel_f_file_4e52bc_idx")],
                "unique_together": {("content_type", "object_id", "code", "version")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="discipline",
            unique_together={("education", "code")},
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_mentor", models.BooleanField(default=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "place",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="contacts", to="metis.place"
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contact_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "metis_education_contacts",
                "unique_together": {("place", "user")},
            },
        ),
    ]
