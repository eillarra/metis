[tool.poetry]
name = "metis"
version = "1.0.0"
description = ""
authors = ["Eneko Illarramendi <eneko@illarra.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "~3.11.0"
django = {extras = ["bcrypt"], version = "~4.2.0"}
djangorestframework = "*"
django-allauth = "*"
django-compressor = "*"
django-cors-headers = "*"
django-countries = "*"
django-ical = "*"
django-libsass = "*"
django-modeltranslation = "*"
django-storages = {extras = ["s3"], version = "*"}
django-vite = "==2.1.3"
drf-extensions = "*"
drf-writable-nested = "*"
gevent = "*"
gunicorn = "*"
hiredis = "*"
holidays = "*"
huey = "*"
inertia-django = "*"
markdown = "*"
mysqlclient = "*"
nh3 = "*"
openpyxl = "*"
pandas = "*"
phonenumbers = "*"
pydantic = "*"
pyyaml = "*"
redis = "*"
requests = "*"
scipy = "*"
sentry-sdk = {extras = ["django"], version = "*"}
tzdata = "*"
uritemplate = "*"
whitenoise = "*"
xhtml2pdf = "==0.2.11"

[tool.poetry.group.dev.dependencies]
django-debug-toolbar = "*"
factory-boy = "*"
maya = "*"
phonenumbers = "*"
pytest = "*"
pytest-cov = "*"
pytest-django = "*"
pytest-xdist = "*"
responses = "*"
ruff = "*"
sqlalchemy = "*"

[tool.coverage.run]
omit = [
  "*/migrations/**",
  "*/settings/**",
  "*/tests/**",
  "*apps.py",
  "*urls.py",
  "*wsgi.py",
  "manage.py",
]

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "raise NotImplementedError", "def __repr__", "if TYPE_CHECKING:"]
show_missing = true

[tool.pytest.ini_options]
addopts = "--cov=metis --cov-report=html"
markers = [
  "api: mark a test as an `api` test",
  "site: mark a test as an `site` test",
  "unit: mark a test as an `unit` test",
]
DJANGO_SETTINGS_MODULE = "metis.settings.test"

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.isort]
lines-after-imports = 2

[tool.ruff.lint]
select = ["E", "F", "UP", "B", "SIM", "I", "D", "DJ"]
ignore = ["B026", "SIM105", "D100", "D104", "D105", "D107", "D417"]
